# Co-driver: Alex Gelsomino
# By Lello Lillili

# READ UNTIL THE END!

# =======
# Corners
# =======

# Here you associate corner codes to specific samples. We do this so we can have
# different co-drivers use different samples and/or conventions without having
# to change pacenotes. If you hate corner codes, you can still make your own
# pacenotes using the regular sample names (e.g., "hairpin left", "3 right"),
# but they're not going to be compatible with multiple codrivers. Best of both
# worlds is you write the pacenotes however you like, and then run a
# find-and-replace whenever you're done.

# Example:
# With default Stu
#   L0E: will play Stu's "hairpin left.ogg" sample
#   RS will play "square right"
#   L6P will play "flat left"

# With default Alex Gelsomino
#   L0E will play Alex Gelsomino's "left 1.ogg" sample
#   RS will play "turn right 2"
#   L6P will play "6 right plus"

# You can play around with these, and make your own conventions, as long as
# there is a sample (either see the list below, or inspect samples folders
# directly). The default convention for Stu (the default codriver) is the
# Dirt:Rally one (because it's the most popular rally game).

# If you want to have visual pacenotes working properly, keep in mind that any
# convention other than the defult one will require you to update the
# symbols.ini file. This is easy, check out "symbols.ini".  I'm not bothering
# making this more flexible/automated because if you're going to use your own
# corner convention I'm assuming you're an expert and you have disabled the
# visual pacenotes anyway.

# Example:

# R0M(inus): "acute right" in Dirt:Rally
# R0E(xact): "hairpin right" in Dirt:Rally
# R0P(lus): faster than a hairpin right in Dirt:Rally, but slower than a "1 right"

# L2M(minus): slower than a L3E
# L3E(xact): same as a "3 left" in Dirt Rally 1 or 2.
# L4P(lus): faster than a L3E

# etc.

# Example:
# Stu has samples that allow you do use the 1 to 12 convention, so you can do
# something similar to what Elfyn Evans uses.

# S - square LR
#
# 0M - 1 LR
# 0E - hairpin LR
# 0P - open hairpin LR
#
# 1M - 12 LR minus
# 1E - 11 LR
# 1P - 10 LR plus
#
# 2M - 9 LR minus
# 2E - 8 LR
# 2P - 7 LR plus
#
# 3M - 6 LR minus
# 3E - 6 LR
# 3P - 5 LR
#
# 4M - 5 LR plus
# 4E - 4 LR
# 4P - 4 LR plus
#
# 5M - 3 LR minus
# 5E - 3 LR
# 5P - 2 LR minus
#
# 6M - 2 LR
# 6E - 1 LR minus
# 6P - 1 LR

# The default convention for Alex Gelsomino is a bit shit, because there's only
# samples for corners 1 to 6. He never says "hairpin", "flat", or stuff like
# that. I've tried to create new corners such as 7, 8, 9, etc by stitching
# samples together, but it sounded bad.
#
# As a result, I use "1" for hairpins, and replicate a couple of less common
# corners.

# =======
# Corners
# =======

0M - LR 1 minus
0E - LR 1
0P - LR 1 plus

1M - LR 1 plus
1E - LR 2 minus
1P - LR 2 minus

2M - LR 2
2E - LR 2
2P - LR 2 plus

3M - LR 3 minus
3E - LR 3
3P - LR 3 plus

4M - LR 4 minus
4E - LR 4
4P - LR 4 plus

5M - LR 5 minus
5E - LR 5
5P - LR 5 plus

6M - LR 6 minus
6E - LR 6
6P - LR 6 plus

S - turn LR 2

# ============
# Slow Corners
# ============

# The codriver will search these keywords in the pacenotes, and if it finds a
# match, it will treat the corners as a slow corner. A slow corner is a corner
# that takes a while to clear. When clearing a slow corner, the codriver will
# take a breath before calling the distance to the subsequent corner, since
# there is no rush to call the distance. Remove them if you dislike this
# behavior.

# Example:
# The next two corners is a left hairpin, and after 100 meters we have a 6
# right. Stu will say
# "hairpin left" ...
# wait until you are in the middle of the hairpin, and say
# ... "100"
# wait until appropriate
# "6 right" etc

slowCorners=left 1 minus, right 1 minus, left 1, right 1, left 1 plus, right 1 plus, left 2 minus, right 2 minus, long

# ===========
# Sample list
# ===========

# We must list every available sample, because BeamNG cannot search the
# filesystem (thankfully).
#
# Same samples have multiple versions. Any alternative sample goes into
# CODRIVER/samples/alts
# And needs not be listed here. See the folder for the naming scheme
#
# Example:
# Co-driver "Frank" has 4 different versions of "right 5". You need to have
#
# .../codrivers/Frank/samples/right 5.ogg
# .../codrivers/Frank/samples/alts/right 5_1.ogg
# .../codrivers/Frank/samples/alts/right 5_2.ogg
# .../codrivers/Frank/samples/alts/right 5_3.ogg
# You only need to add
# right 5
#
# In the sample list of Frank's codriver.ini

1
2
3 minus dont
3 minus
3
3 plus long
4 right
5 minus in
5
6
7
20 down
20
30 care
30 caution
30 down
30 entry
30 left 4 plus
30
30 right 4
30 right
50
50 right 6
50 right
70
100
120
150
180
200
250
300
350
400
450
500
550
550 over crest
and bumps
and dips
and
and right 5 minus
and short
at the junction
before the pile
big crest
brake
breakin
bridge
bump
bumps
bumpy
care
caution
chicane left entry
chicane right entrance
chicane right entry
crest
cut
danger
deceptive
deep water
dip
dips
dirt
don
dont
dont over crest
down
down there
entry 50
entry
extra long
four
good luck beating that one
go
half long
here watch this one
hook
in
in over crest
into bump
into crest
into danger
into dip
into finish
into jump
into left 3 minus
into left 3 plus long
into left 4 minus in
into left 4 minus
into left 4
into left 4 plus
into left 5 short
into
into right 3 minus
into right 3
into right 4 minus
into right 4
into right 4 plus
into right 5 in
into right 5 minus
into right 5
into right
jesus
jump
junction
keep left over crest
kerr
kinks
late
late over crest
left 1
left 1 plus long
left 2 minus dont
left 2
left 2 plus long
left 2 plus
left 3 long
left 3 minus
left 3
left 3 plus half long
left 3 plus in
left 3 plus
left 4 dont
left 4 minus long
left 4 minus
left 4
left 4 plus in
left 4 plus long
left 4 plus
left 4 plus short
left 5 minus narrow
left 5 minus
left 5
left 5 plus
left 5 plus over bump
left 5 plus over crest
left 6 long
left 6
left 6 over bump
left 6 over crest
left 6 over jump
left 6 plus
left 6 short
left 6 very long
left
left over crest
left over small crest
line
link
little
long crest
long
long over crest
loose maybe
loose
maybe
middle over jump
minus long
minus minus
minus
mud
narrow bridge
narrow dont
narrow
narrows
oi oi
ok
open
opens into crest
opens into jump
opens long
opens
opens over crest
opens very long
over bump
over bumps
over crest
over dip
over long crest
plus long
plus
plus plus
repeat
right 1
right 1 plus
right 2 at junction
right 2 long
right 2
right 2 plus long
right 2 plus
right 3 minus
right 3
right 3 plus long
right 3 plus
right 4 in
right 4 minus long
right 4 minus
right 4
right 4 plus dont
right 4 plus in
right 4 plus late
right 4 plus
right 4 plus over crest
right 5 in
right 5 long
right 5 minus
right 5 minus over crest
right 5
right 5 over crest
right 5 plus
right 5 plus over bump
right 6 long
right 6
right 6 over dip
right 6 plus long
right 6 plus
right 6 plus over crest
short
short over crest
sign
slippy maybe
slippy
small crest
small jump
stay middle
stay out over crest
stay right at the junction
straight through junction
sudden
tar
through dip
through junction
tightens 2 minus late
tightens 2
tightens 3 minus
tightens 4
tightens 4 plus
tightens 5
tightens little
tightens long
tightens
to dirt
to left 1 minus
to left 4 plus
to long
to
to right 2
turn left 1
turn left 2 minus
turn left 2
turn left 3 minus
turn left 3 plus
turn
turn right 2
turn right 2 plus
turn right 3 in
turn right 4 minus
up
very long
very long tightens
watch the in on this one
water inside
water
wide
wide road
yeah


# ====================
# Sample substitutions
# ====================

# We need to make sure that the co-driver is compatible with all the pacenotes.
# If the co-driver encounters a pacenote whose sample does not exist, it must
# know what to say instead.

# For the list of all used samples and an explaination of substitutions, see
# https://github.com/lellolillili/rallymodemod/blob/main/doc/all_used_samples.md

# The syntax is
# non-existing-sample >>> substitution

dont cut >>> dont
after crest >>> crest
armco >>> _
around bale >>> dont
around pole >>> dont
around tree >>> dont
at crest >>> crest
at house >>> _
at junction >>> at the junction
bad camber >>> _
barrier outside >>> in
big cut >>> cut
big jump >>> jump
keep middle >>> stay middle
continues over crest >>> long over crest
curb >>> in
double tightens >>> caution tightens
downhill >>> down
drops >>> down
go narrow >>> narrows
go straight >>> straight through junction
go wide >>> wide
hole >>> caution
muddy >>> mud
onto bridge >>> into bridge
onto dirt >>> to dirt
onto gravel >>> to dirt
onto narrow bridge >>> into narrow bridge
onto tarmac >>> tar
over kink >>> _
over small jump >>> small jump
rocks in road >>> caution
rocks inside >>> care wide
rocks outside >>> care in
round >>> _
sharp over crest >>> short over crest
slight left >>> left 6 plus
slight right >>> right 6 plus
slowing >>> brake
small cut >>> _
tarmac >>> tar
then >>> and
through narrow gate >>> entry narrow
through tunnel >>> _
through water splash >>> water
tidy >>> _
tight >>> narrow
tight hairpin left >>> left 1 minus
tight hairpin right >>> right 1 minus
to 1 >>> tightens 2
to 2 >>> tightens 3
to 3 >>> tightens 4
to 4 >>> tightens 5
to finish >>> into finish
triple caution >>> caution
twisty >>> _
uphill >>> up
very long >>> extra long
wide out >>> wide

# Possibly problematic:
# Should implement these somehow, at some point
very late >>> late
# Maybe stitch extra + late?
